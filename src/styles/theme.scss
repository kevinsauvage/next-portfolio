$surface-dark: #161a23;
$on-surface-dark: #f4f4f4;

$surface-light: #ececec;
$on-surface-light: #000000;

$step-surface-dark: 2%;
$step-on-surface-dark: 10%;
$step-light: 4%;

$colors-dark: (
  primary: #00a2ff,
  black: #000000,
  white: #f2f2f2,
  surface-100: $surface-dark,
  surface-200: darken($surface-dark, $step-surface-dark),
  surface-300: darken($surface-dark, $step-surface-dark * 2),
  surface-400: darken($surface-dark, $step-surface-dark * 3),
  surface-500: darken($surface-dark, $step-surface-dark * 4),
  on-surface-100: $on-surface-dark,
  on-surface-200: darken($on-surface-dark, $step-on-surface-dark),
  on-surface-300: darken($on-surface-dark, $step-on-surface-dark * 2),
  on-surface-400: darken($on-surface-dark, $step-on-surface-dark * 3),
  on-surface-500: darken($on-surface-dark, $step-on-surface-dark * 4),
);

$colors-light: (
  primary: #0073ff,
  black: #000000,
  white: #f2f2f2,
  surface-100: $surface-light,
  surface-200: darken($surface-light, $step-light),
  surface-300: darken($surface-light, $step-light * 2),
  surface-400: darken($surface-light, $step-light * 3),
  on-surface-100: $on-surface-light,
  on-surface-200: ligthen($on-surface-light, $step-light),
  on-surface-300: ligthen($on-surface-light, $step-light * 2),
  on-surface-400: ligthen($on-surface-light, $step-light * 4),
  on-surface-500: ligthen($on-surface-light, $step-light * 6),
);

@function hex-to-rgb($hex) {
  @return red($hex), green($hex), blue($hex);
}

@mixin generate-colors($colors) {
  @each $color, $value in $colors {
    @if str-slice(#{$value}, 1, 1) == '#' {
      --#{$color}: #{$value};
    } @else {
      --#{$color}: var(--#{$value});
    }
  }

  @each $color, $value in $colors {
    @if str-slice(#{$value}, 1, 1) == '#' {
      --rgb-#{$color}: #{hex-to-rgb($value)};
    } @else {
      --rgb-#{$color}: var(--RGB_#{$value});
    }
  }
}

html {
  @include generate-colors($colors-dark);
}

.theme-light {
  @include generate-colors($colors-light);
}
